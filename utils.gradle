// 官方文档:http://google.github.io/android-gradle-dsl/current
// Android Gradle使用总结 https://blog.csdn.net/u014608640/article/details/77991899
//【Android技巧之相见恨晚系列】-自制Gradle脚本动态设置版本号 https://www.jianshu.com/p/a1b0bc453319
ext.majorNumber = 1
ext.minorNumber = 0
ext.revisionNumberCMD = 'git rev-list HEAD --count'
ext.revisionNumber = revisionNumberCMD.execute().getText().trim().toInteger()
ext.revisionDescriptionCMD = 'git describe --always'
ext.tempRevisionDescription = revisionDescriptionCMD.execute().getText().trim()
ext.revisionDescription = (tempRevisionDescription == null || (tempRevisionDescription).size() == 0) ? new Date().format("yyMMdd") : (tempRevisionDescription).substring((tempRevisionDescription).size() - 6)

def getVersionCode(boolean isRelease) {
    println "获取数字版本号"
    if (isRelease) {
        majorNumber * 1000000 + minorNumber * 10000 + revisionNumber
    }
    // debug环境
    else {
        Integer.parseInt(new Date().format("yyMMddHHmm"))
    }
}

//Major_Version_Number.Minor_Version_Number[Revision_Number[.Build_Number]]
def getVersionName(boolean isRelease) {
    println "获取字符串版本号"
    if (isRelease) {
        majorNumber + "." + minorNumber + "." + revisionNumber + "." + revisionDescription
    } else {
        String today = new Date().format("yyMMdd")
        String time = new Date().format("HHmmss")
        majorNumber + "." + minorNumber + "." + revisionNumber + ".$today.$time." + revisionDescription
    }
}

ext {
    getVersionCode = this.&getVersionCode
    getVersionName = this.&getVersionName
}